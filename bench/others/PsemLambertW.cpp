#include "PsemLambertW.h"

#include <cmath>

double PsemLambertW0(double x)
{
	double V;
	if (-0.3678794411714423 <= x && x < 1)
	{
		double k1 = sqrt(1. + 2.7182818284591 * x);
		double k2 = 0.33333333333333 + .70710678118655 / k1 - 0.058925565098880 * k1 +
			(x + 0.36787944117144) * (0.050248489761611 + (0.11138904851051 +
				0.040744556245195 * x) * x) / (1. + 
					(2.7090878606183 + (1.5510922597820 + 0.095477712183841 * x) * x) * x);

		V = -(k2 - 1) / k2;
	}

	if (1 <= x && x < 40)
	{
		double k1 = 1 + (5.950065500550155 + (13.96586471370701 + (10.52192021050505 +
			(3.065294254265870 + 0.1204576876518760 * x) * x) * x) * x) * x;

		V = 0.1600049638651493 * log(k1);
	}
	
	if (40 <= x && x < 20000)
	{
		double k1 = 1 + (-3.16866642511229e11 + (3.420439800038598e10 +
			(-1.501433652432257e9 + (3.44887729947585e7 + (-4.453783741137856e5 +
				(3257.926478908996 + (-10.82545259305382 + (0.6898058947898353e-1 +
					0.4703653406071575e-4 * x) * x) * x) * x) * x) * x) * x) * x) * x;

		V = 0.9898045358731312e-1 * log(k1);
	}

	if (20000 <= x)
	{
		double k1 = 1 / (1 + log(1 + x));
		double k2 = 1 / k1;
		double k3 = log(k2);
		
		V = k2 - 1 - k3 + (1 + k3 + (-1 / 2 + (1 / 2) * k3 * k3 + (-1 / 6 + (-1 + (-1 / 2 +
			(1 / 3) * k3) * k3) * k3) * k1) * k1) * k1;
	}

	// Fritsch iteration
	double A = log(x / V) - V;
	double Q = (2 * (1 + V)) * (1 + V + (2 / 3) * A);
	double F = A * (Q - A) / ((1 + V) * (Q - 2 * A));
	double z = V * (1 + F);

	return z;
}

double PsemLambertWm1(double x)
{
	double V;
	if (-0.1 <= x)
	{
		double k0 = (1.01999365162218 + (-12.6917365519443 - 45.1506015092455 * x) * x) * x / (1 +
			(-22.9809693297808 + (-104.692066099727 - 95.2085341727207 * x) * x) * x);

		double k1 = log(-x);
		double lk1 = log(-k1);
		double k2 = k1 - lk1 + lk1 / k1;
		V = k0 + k2;
	}
	
	if (-0.34 <= x && x < -0.1)
	{
		V = (-1362.78381643109 + (-1386.04132570149 + (11892.1649836015 +
			16904.0507511421 * x) * x) * x) * x / (1 +
				(251.440197724561 + (-1264.99554712435 +
					(-5687.63429510978 - 2639.24130979048 * x) * x) * x) * x);
	}

	if (-0.3678794411714423 <= x && x < -0.34)
	{
		V = (-7.874564067684664 + (-63.11879948166995 + (-168.6110850408981 -
			150.1089086912451 * x) * x) * x) * x * (x + 0.3678794411714423) / (1.0 +
				(15.97679839497612 + (98.26612857148953 + (293.9558944644677 +
					(430.4471947824411 + 247.8576700279611 * x) * x) * x) * x) * x) - 1.0;
	}

	// Fritsch iteration
	double A = log(x / V) - V;
	double Q = (2 * (1 + V)) * (1 + V + (2 / 3) * A);
	double F = A * (Q - A) / ((1 + V) * (Q - 2 * A));
	double z = V * (1 + F);

	return z;
}